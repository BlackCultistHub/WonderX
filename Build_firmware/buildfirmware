#!/bin/bash
# Builds project inside docker enviroment

REPO="https://github.com/BlackCultistHub/WonderX.git"
FIRMWARE_DIR="/firmware"
CMAKE_LOGFILE="${FIRMWARE_DIR}/cmake.log"
LOGFILE="${FIRMWARE_DIR}/build.log"

echo "Build params:"
echo "Repo: ${REPO}"
echo "Branch: ${REPO_BRANCH}"
echo "Firmware dir: ${FIRMWARE_DIR}"
echo "Build log: ${LOGFILE}"

# Prepare repo
if [[ -z $(git ls-remote --head "${REPO}" "${REPO_BRANCH}") ]]; then
  echo "Repo doesn't seem to have target branch!"
  exit
fi

mkdir -p "${FIRMWARE_DIR}"
git clone "${REPO}"
cd /WonderX
git checkout "${REPO_BRANCH}"

# Prepare enviroment
. ${HOME}/esp/esp-idf/export.sh
mkdir build
cd build

# Build firmware
echo "Generating CMake..."
cmake .. > "${CMAKE_LOGFILE}"

if [[ -f "/WonderX/build/Makefile" ]]; then
  echo "Building firmware..."
  make > "${LOGFILE}"
else
  echo "Error. CMake failed."
  exit
fi

# Copy build
if [[ -f "/WonderX/build/WonderX.elf" ]]; then
  cp -f "/WonderX/build/WonderX.elf" "${FIRMWARE_DIR}"
else
  echo "Error. elf binary not found."
  exit
fi
if [[ -f "/WonderX/build/WonderX.bin" ]]; then
  cp -f "/WonderX/build/WonderX.bin" "${FIRMWARE_DIR}"
else
  echo "Error. bin binary not found."
  exit
fi
echo "Build finished."